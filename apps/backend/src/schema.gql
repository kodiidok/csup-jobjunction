# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Company {
  companyName: String!
  id: ID!
  stalls: [Stall!]
  user: User!
  userId: ID!
}

input CreateCompanyInput {
  companyName: String!
  userId: ID
}

input CreateInterviewInput {
  interviewDate: DateTime!
  interviewTime: String!
  roomId: ID!
  studentId: ID!
}

input CreateRoomInput {
  currentStudent: String
  interestedStudentIds: [ID!]
  roomNumber: String!
  roomStatus: String!
  stallId: ID!
}

input CreateStallInput {
  companyId: ID!
  floorPlanLocation: String
  roomId: ID!
  stallNumber: String!
}

input CreateStudentInput {
  interestedRoomIds: [ID!]
  studentEmail: String!
  studentId: String!
  studentName: String!
  userId: ID
}

input CreateUserInput {
  email: String!
  name: String
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Interview {
  id: ID!
  interviewDate: DateTime!
  interviewTime: String!
  room: Room!
  status: String
  student: Student!
}

type Mutation {
  createCompany(input: CreateCompanyInput!): Company!
  createInterview(input: CreateInterviewInput!): Interview!
  createRoom(input: CreateRoomInput!): Room!
  createStall(input: CreateStallInput!): Stall!
  createStudent(input: CreateStudentInput!): Student!
  createUser(input: CreateUserInput!): User!
  deleteCompany(id: ID!): Company!
  deleteInterview(id: ID!): Interview!
  deleteRoom(id: ID!): Room!
  deleteStall(id: ID!): Stall!
  deleteStudent(id: ID!): Student!
  deleteUser(id: String!): User!
  updateCompany(id: ID!, input: UpdateCompanyInput!): Company!
  updateInterview(id: ID!, input: UpdateInterviewInput!): Interview!
  updateRoom(id: ID!, input: UpdateRoomInput!): Room!
  updateStall(id: ID!, input: UpdateStallInput!): Stall!
  updateStudent(id: ID!, input: UpdateStudentInput!): Student!
  updateUser(id: String!, input: UpdateUserInput!): User!
}

type Query {
  companies: [Company!]!
  company(id: ID!): Company!
  interview(id: ID!): Interview!
  interviews: [Interview!]!
  room(id: ID!): Room!
  rooms: [Room!]!
  stall(id: ID!): Stall!
  stalls: [Stall!]!
  student(id: ID!): Student!
  students: [Student!]!
  user(id: String!): User!
  users: [User!]!
}

type Room {
  currentStudent: String
  id: ID!
  interestedStudents: Student
  roomNumber: String!
  roomStatus: String!
}

type Stall {
  company: Company!
  floorPlanLocation: String
  id: ID!
  stallNumber: String!
}

type Student {
  id: ID!
  interestedRooms: Room
  interviews: Interview
  studentEmail: String!
  studentId: String!
  studentName: String!
  user: User!
  userId: ID!
}

input UpdateCompanyInput {
  companyName: String
  id: ID!
}

input UpdateInterviewInput {
  id: ID!
  interviewDate: DateTime
  interviewTime: String
  roomId: ID
  status: String
  studentId: ID
}

input UpdateRoomInput {
  currentStudent: String
  id: ID!
  interestedStudentIds: [ID!]
  roomNumber: String
  roomStatus: String
  stallId: ID
}

input UpdateStallInput {
  companyId: ID
  floorPlanLocation: String
  id: ID!
  roomId: ID
  stallNumber: String
}

input UpdateStudentInput {
  id: ID!
  interestedRoomIds: [ID!]
  studentEmail: String
  studentId: String
  studentName: String
}

input UpdateUserInput {
  email: String
  name: String
  password: String
  username: String
}

type User {
  email: String!
  id: ID!
  name: String
  password: String!
  username: String!
}