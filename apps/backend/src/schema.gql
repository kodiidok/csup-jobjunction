# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Company {
  email: String!
  id: ID!
  name: String
  password: String!
  role: Role
  username: String!
}

input CreateCompanyInput {
  email: String
  name: String
  password: String
  roleId: String
  username: String
}

input CreateInterviewInput {
  interviewDate: DateTime
  interviewTime: String
  roomId: String
  status: String
}

input CreateRoleInput {
  division: String
  name: String!
}

input CreateRoomInput {
  currentStudent: String
  interestedStudentIds: [ID!]
  roomNumber: String!
  roomStatus: String!
  stallId: ID!
}

input CreateStallInput {
  companyId: ID!
  floorPlanLocation: String
  roomId: ID
  stallNumber: String!
}

input CreateStudentInput {
  email: String
  name: String
  password: String
  roleId: String
  studentId: String!
  username: String
}

input CreateUserInput {
  email: String!
  name: String
  password: String!
  roleId: String
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Interview {
  id: ID!
  interviewDate: DateTime
  interviewTime: String
  room: Room
  status: String
  students: [Student!]
}

type Mutation {
  createCompany(input: CreateCompanyInput!): Company!
  createInterview(input: CreateInterviewInput!, studentIds: [String!]): Interview!
  createRole(input: CreateRoleInput!): Role!
  createRoom(input: CreateRoomInput!): Room!
  createStall(input: CreateStallInput!): Stall!
  createStudent(input: CreateStudentInput!): Student!
  createUser(input: CreateUserInput!): User!
  deleteCompany(id: ID!): Company!
  deleteInterview(id: ID!): Interview!
  deleteRole(id: String!): Role!
  deleteRoom(id: ID!): Room!
  deleteStall(id: ID!): Stall!
  deleteStudent(id: ID!): Student!
  deleteUser(id: String!): User!
  softDeleteRole(id: String!): Role!
  updateCompany(id: ID!, input: UpdateCompanyInput!): Company!
  updateInterview(id: ID!, input: UpdateInterviewInput!, studentIds: [String!]): Interview!
  updateRole(id: String!, input: UpdateRoleInput!): Role!
  updateRoom(id: ID!, input: UpdateRoomInput!): Room!
  updateStall(id: ID!, input: UpdateStallInput!): Stall!
  updateStudent(id: ID!, input: UpdateStudentInput!): Student!
  updateUser(id: String!, input: UpdateUserInput!): User!
}

type Query {
  companies: [Company!]!
  companiesByName(name: String!): [Company!]!
  company(id: ID!): Company!
  interview(id: ID!): Interview!
  interviews: [Interview!]!
  roleById(id: String!): Role!
  roleByRoleName(roleName: String!): Role!
  roles: [Role!]!
  room(id: ID!): Room!
  rooms: [Room!]!
  stall(id: ID!): Stall!
  stalls: [Stall!]!
  student(id: ID!): Student!
  students: [Student!]!
  user(id: String!): User!
  users: [User!]!
  usersByRole(roleId: String!): [User!]!
}

type Role {
  division: String
  id: ID!
  name: String!
}

type Room {
  currentStudent: String
  id: ID!
  interviews: [Interview!]
  roomNumber: String!
  roomStatus: String!
  stall: Stall
}

type Stall {
  company: Company
  floorPlanLocation: String
  id: ID!
  stallNumber: String!
}

type Student {
  email: String!
  id: ID!
  name: String
  password: String!
  role: Role
  studentId: String!
  username: String!
}

input UpdateCompanyInput {
  email: String
  name: String
  password: String
  roleId: String
  username: String
}

input UpdateInterviewInput {
  interviewDate: DateTime
  interviewTime: String
  roomId: String
  status: String
}

input UpdateRoleInput {
  division: String
  name: String!
}

input UpdateRoomInput {
  currentStudent: String
  interestedStudentIds: [ID!]
  roomNumber: String
  roomStatus: String
  stallId: ID
}

input UpdateStallInput {
  companyId: ID
  floorPlanLocation: String
  id: ID!
  roomId: ID
  stallNumber: String
}

input UpdateStudentInput {
  email: String
  name: String
  password: String
  roleId: String
  studentId: String
  username: String
}

input UpdateUserInput {
  email: String
  name: String
  password: String
  roleId: String
  username: String
}

type User {
  email: String!
  id: ID!
  name: String
  password: String!
  role: Role
  username: String!
}